apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: gitops-system
spec:
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true

  repo:
    resources:
      limits:
        cpu: '1'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi

  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false

  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false

  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi

  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi

  controller:
    resources:
      limits:
        cpu: '2'
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi

  applicationSet:
    resources:
      limits:
        cpu: '2'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi

  rbac:
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
      g, /ArgoCDAdmins, role:admin
      g, ArgoCDAdmins, role:admin
    scopes: '[groups]'

  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  
  dex:
    # Disable openShift Authentication
    config:
    openShiftOAuth: false

  # Disable ADMIN Authentication
  extraConfig:
    "admin.enabled": "false"

  oidcConfig: |
    name: Keycloak
    issuer: https://keycloak-keycloak-system.apps.${SUBDOMAIN}.${DOMAIN_NAME}/auth/realms/dso
    clientID: argo-client
    clientSecret: "${KEYCLOACK_ARGO_SECRET}"
    requestedScopes: ["openid", "profile", "email", "groups"]
