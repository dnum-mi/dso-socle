apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: sonar-system
  name: sonar-dso  # Sets Deployment name
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonar
  template:
    metadata:
      labels:
        app: sonar
    spec:
#      initContainers:
#        - name: init
#          image: busybox
#          command:
#            - sysctl
#            - -w
#            - vm.max_map_count=262144
#          imagePullPolicy: IfNotPresent
#          securityContext:
#            privileged: true
      containers:
        - name: sonar
          image: sonarqube:9.6-community # Sets Image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9000  # Exposes container port
          env: 
#            - name: "SONAR_WEB_JAVAADDITIONALOPTS"
#              value: "-javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.12.0.jar=web"
#            - name: "SONAR_CE_JAVAADDITIONALOPTS"
#              value: "-javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.12.0.jar=ce"
            - name: "SONAR_JDBC_USERNAME"
              value: "dso_admin"
            - name: "SONAR_JDBC_PASSWORD"
              value: "${SONAR_JDBC_PASSWORD}"
            - name: "SONAR_JDBC_URL"
              value: "jdbc:postgresql://postgres:5432/sonardb"
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              subPath: data
              name: sonar-data
            - mountPath: /opt/sonarqube/logs
              subPath: logs
              name: sonar-data
            - mountPath: /opt/sonarqube/extensions
              subPath: extensions
              name: sonar-data
      volumes:
        - name: sonar-data
          persistentVolumeClaim:
            claimName: sonar-data-claim
